#!/bin/bash

# Clone from bakkeby flexi repos
repos_url=(
  "https://github.com/bakkeby/dwm-flexipatch"
  "https://github.com/bakkeby/dmenu-flexipatch"
  "https://github.com/bakkeby/st-flexipatch"
)

repos_len=${#repos_url[@]}
for (( i=0; i<${repos_len}; i++ ));
do
  # Using another var, because bash will ignore the index of arr[0]. I know, it's dumb
  repo=${repos_url[$i]}
  dir_name=$(basename "$repo")
  dir_path=$(find $HOME -type d -name "$dir_name")
  suck_flexi="$HOME/suckless-flexipatch/" ## For easier directory navigation

  #Check the existence of flexi directory
  if [[ ! -d "$dir_path" ]]; then
    echo "The $dir_name are nowhere to be found, cloning from the repo now....."
    mkdir "$suck_flexi" 2>/dev/null
    git clone "$repo" "$suck_flexi/$dir_name" 2>/dev/null
  else
    echo "Found $dir_name at: $dir_path, cloning is not needed"
  fi
done
echo "
------------------------------------------------ Patching out DWM ------------------------------------------------
"

## 0 = disable, 1 = enable; For convenience.
## Change the status on each "sed" command for reverse operation
status=( "0" "1" )
current_dir="$PWD"

dwm_patches() {
  local patches=(
    ## Add the patches that you want
    "ALWAYSCENTER_PATCH"
    "ATTACHBELOW_PATCH"
    "BAR_AWESOMEBAR_PATCH"
    "BAR_FANCYBAR_PATCH"
    "BAR_HEIGHT_PATCH"
    "BAR_LTSYMBOL_PATCH"
    "BAR_STATUS_PATCH"
    "BAR_SYSTRAY_PATCH"
    "BAR_TAGS_PATCH"
    "NO_TRANSPARENT_BORDERS_PATCH"
    "PERTAG_PATCH"
    "PERTAG_VANITYGAPS_PATCH"
    "VANITYGAPS_MONOCLE_PATCH"
    "VANITYGAPS_PATCH"
  )

  local dwm_dir=$(find $HOME -type d -name "dwm-flexipatch")
  local patches_len=${#patches[@]}
  for (( i=0; i<${patches_len}; i++ ));
  do
    local patch=${patches[$i]}
    sed -i "s/$patch ${status[0]}/$patch ${status[1]}/g" "$dwm_dir/patches.def.h"
  done

  ## For some reason, it turn itself. I don't like having a padding on status bar
  local ex_patch="BAR_PADDING_VANITYGAPS_PATCH"
  sed -i "s/$ex_patch ${status[1]}/$ex_patch ${status[0]}/g" "$dwm_dir/patches.def.h"
  cd "$dwm_dir"; sudo make clean install; cd "$current_dir"
  echo "
------------------------------------------------- Patching out ST ------------------------------------------------
  "
}

st_patches() {
  local patches=(
    "ALPHA_PATCH"
    "BOLD_IS_NOT_BRIGHT_PATCH"
    "SCROLLBACK_PATCH"
    "SINGLE_DRAWABLE_BUFFER_PATCH"
    "W3M_PATCH"
    "WIDE_GLYPHS_PATCH"
  )

  local st_dir=$(find $HOME -type d -name "st-flexipatch")
  local patches_len=${#patches[@]}
  for (( i=0; i<${patches_len}; i++ ));
  do
    local patch=${patches[$i]}
    sed -i "s/$patch ${status[0]}/$patch ${status[1]}/g" "$st_dir/patches.def.h"
  done

  cd "$st_dir"; sudo make clean install; cd "$current_dir"
}

dwm_patches
st_patches

echo "
                                                     Operation
--------------------------------- Please re-login from your current dwm session ----------------------------------
                                                    Successfull!

"
### Future implementation
#dwm_configs() {
#  local configs=(
#    "static const unsigned int gappih         = 10;"
#    "static const unsigned int gappiv         = 10;"
#    "static const unsigned int gappoh         = 10;"
#    "static const unsigned int gappov         = 10;"
#    "static const int bar_height              = 20;"
#    "[DEFAULT_TAGS]        = { \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\" };"
#    "static const char *fonts[]              = { \"Hack Nerd Font:size=10:style=Regular\" };"
#    "static const char dmenufont[]           = \"Hack Nerd Font:size=10:style=Regular\";"
#  )
#}
