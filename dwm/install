#!/bin/bash

echo "
----------- Commence Operation ----------------
"

## 0 = disable, 1 = enable; For convenience.
status=( "0" "1" )
current_DIR="$PWD"
flexi_DIR="$HOME/suckless-flexipatch"
out_DIR="$flexi_DIR/output"

for DIR in "$flexi_DIR" "$out_DIR"; do
  if [[ ! -d "$DIR" ]]; then
    mkdir -p "$flexi_DIR" "$out_DIR"
  fi
done

# Clone from bakkeby flexi repos
repos_url=(
  "https://github.com/bakkeby/dwm-flexipatch"
  "https://github.com/bakkeby/st-flexipatch"
  "https://github.com/bakkeby/dmenu-flexipatch"
  "https://github.com/bakkeby/flexipatch-finalizer"
)

# Create the necessary directory
for repo in "${repos_url[@]}"; do
  repo_name=$(basename "$repo")
  repo_DIR="$flexi_DIR/$repo_name"

  if [[ ! -d "$repo_DIR" ]]; then
    echo "Cloning $repo_name..."
    git clone "$repo" "$repo_DIR" 2>/dev/null
  else
    echo "$repo_name already exist, skipping clone."
  fi
done

# Define the DIRectory
dwm_DIR="$flexi_DIR/dwm-flexipatch"
st_DIR="$flexi_DIR/st-flexipatch"
fin_DIR="$flexi_DIR/flexipatch-finalizer"

dwm_patches() {
  echo "
------------ Patching out DWM -----------------
  "

  local patches=(
    "ALWAYSCENTER_PATCH"
    "ATTACHBELOW_PATCH"
    "BAR_AWESOMEBAR_PATCH"
    "BAR_FANCYBAR_PATCH"
    "BAR_HEIGHT_PATCH"
    "BAR_LTSYMBOL_PATCH"
    "BAR_STATUS_PATCH"
    "BAR_SYSTRAY_PATCH"
    "BAR_TAGS_PATCH"
    "MOVESTACK_PATCH"
    "NO_TRANSPARENT_BORDERS_PATCH"
    "PERTAG_PATCH"
    "PERTAG_VANITYGAPS_PATCH"
    "VANITYGAPS_MONOCLE_PATCH"
    "VANITYGAPS_PATCH"
  )
  local ex_patches=( "BAR_PADDING_VANITYGAPS_PATCH" ) ## ex = exclude

  for patch in "${patches[@]}"; do
    sed -i "s/$patch ${status[0]}/$patch ${status[1]}/g" "$dwm_DIR/patches.def.h"
  done

  for ex_patch in "${ex_patches[@]}"; do
    sed -i "s/$ex_patch ${status[1]}/$ex_patch ${status[0]}/g" "$dwm_DIR/patches.def.h"
  done

  cd "$dwm_DIR" && sudo make clean install && cd "$current_DIR"
}

st_patches() {
  echo "
-------------- Patching out ST -----------------
  "

  local patches=(
    "ALPHA_PATCH"
    "BOLD_IS_NOT_BRIGHT_PATCH"
    "SCROLLBACK_PATCH"
    "SINGLE_DRAWABLE_BUFFER_PATCH"
    "W3M_PATCH"
    "WIDE_GLYPHS_PATCH"
  )

  for patch in "${patches[@]}"; do
    sed -i "s/$patch ${status[0]}/$patch ${status[1]}/g" "$st_DIR/patches.def.h"
  done

  cd "$st_DIR" && sudo make clean install && cd "$current_DIR"
}

finalizer() {
  echo "
--------------- Finalizer ----------------------
  "

  local fin="$fin_DIR/flexipatch-finalizer.sh"
  local dwm_OUT="$out_DIR/dwm"
  local st_OUT="$out_DIR/st"

  bash "$fin" -r -d "$dwm_DIR" -o "$dwm_OUT"
  bash "$fin" -r -d "$st_DIR" -o "$st_OUT"

  echo "Patched dwm at: $dwm_OUT"
  echo "Patched st at: $st_OUT"
}

dwm_patches
st_patches
finalizer

echo "
--------------- Operation
 Please re-login from your current dwm session!
               Successfull ---------------------

 By: MuteSTEVE
"

### Future implementation
#dwm_configs() {
#  local configs=(
#    "static const unsigned int gappih         = 10;"
#    "static const unsigned int gappiv         = 10;"
#    "static const unsigned int gappoh         = 10;"
#    "static const unsigned int gappov         = 10;"
#    "static const int bar_height              = 20;"
#    "[DEFAULT_TAGS]        = { \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\" };"
#    "static const char *fonts[]              = { \"Hack Nerd Font:size=10:style=Regular\" };"
#    "static const char dmenufont[]           = \"Hack Nerd Font:size=10:style=Regular\";"
#  )
#}
